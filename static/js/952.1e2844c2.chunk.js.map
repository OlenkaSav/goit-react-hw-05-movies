{"version":3,"file":"static/js/952.1e2844c2.chunk.js","mappings":"yRAMaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,UAACC,EAAD,CAAOJ,SARY,SAAAK,GACnBA,EAAMC,iBAENN,EAASE,GACTC,EAAS,KAIT,WACE,SAACI,EAAD,CAASC,KAAK,SAAd,UACE,SAAC,MAAD,CAAUC,KAAM,QAGlB,SAACC,EAAD,CACEC,SAlBoB,SAAAN,GACxBF,EAASE,EAAMO,cAAcC,MAAMC,gBAkB/BD,MAAOX,EACPa,UAAU,QACVP,KAAK,OACLQ,aAAa,MACbC,WAAS,EACTC,YAAY,sBAUdd,EAAQe,EAAAA,GAAAA,KAAH,qOAYLT,EAASS,EAAAA,GAAAA,MAAH,0DAKNZ,EAAUY,EAAAA,GAAAA,OAAH,oG,qDCAb,EAnDe,WAAO,IAAD,EACnB,GAAkClB,EAAAA,EAAAA,UAAS,IAA3C,eAAOmB,EAAP,KAAkBC,EAAlB,KACA,GAAwCpB,EAAAA,EAAAA,WAAS,GAAjD,eAAOqB,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAIN,GACZ,IAAMtB,EAAK,UAAGyB,EAAaI,IAAI,iBAApB,QAAiC,GA+B5C,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAK9B,EAAL,CAEA,IAAM+B,EAAO,mCAAG,oGAEZV,GAAgB,GAFJ,UAGeW,EAAAA,EAAAA,IAAahC,GAH5B,OAIgB,KADtBiC,EAHM,QAIKC,SACfC,EAAAA,GAAAA,MAAA,+BACAhB,EAAa,KAEfA,GAAa,OAAIc,IARL,yEAWZZ,GAAgB,GAXJ,4EAAH,qDAcbU,OACC,CAAC/B,KAEF,UAACoC,EAAD,YACE,SAACvC,EAAD,CAAWC,SA/BU,SAAAE,GACvB,GAAqB,KAAjBA,EAAMqC,OAIR,OAHAF,EAAAA,GAAAA,MAAY,qBACZhB,EAAa,SACbO,EAAgB,IAGlBA,EAAgB,CAAEY,OAAQtC,OAyBvBoB,IAAgB,SAACmB,EAAA,EAAD,IAChBrB,EAAUgB,OAAS,IAClB,iCACE,wCACA,SAACM,EAAA,EAAD,CAAWC,YAAavB,EAAWI,SAAUA,WASjDc,EAAQnB,EAAAA,GAAAA,KAAH","sources":["components/Searchbar.jsx","pages/Movies.js"],"sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n// import { toast } from 'react-toastify';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <SForm onSubmit={handleSubmit}>\n      <SButton type=\"submit\">\n        <BsSearch size={16} />\n      </SButton>\n\n      <SInput\n        onChange={handleQueryChange}\n        value={query}\n        className=\"input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n    </SForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst SForm = styled.form`\n  /* margin-top: 5px; */\n  margin: 5px auto;\n  padding: 5px;\n  width: 500px;\n  background-color: #ded7bd;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SInput = styled.input`\n  height: 20px;\n  border: none;\n`;\n\nconst SButton = styled.button`\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n    color: #282094;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Searchbar } from '../components/Searchbar';\nimport { MovieList } from 'components/MovieList';\nimport { fetchByQuery } from 'servise/fetchMovie';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport styled from 'styled-components';\nimport { toast } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [queryList, setQueryList] = useState([]);\n  const [loaderActive, setLoaderActive] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(location);\n  const query = searchParams.get('search') ?? '';\n\n  const handleFormSubmit = query => {\n    if (query.trim() === '') {\n      toast.error('Nothing to search');\n      setQueryList([]);\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ search: query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getData = async () => {\n      try {\n        setLoaderActive(true);\n        const searchResult = await fetchByQuery(query);\n        if (searchResult.length === 0) {\n          toast.error(`Sorry, there are no movies.`);\n          setQueryList([]);\n        }\n        setQueryList([...searchResult]);\n      } catch (error) {\n      } finally {\n        setLoaderActive(false);\n      }\n    };\n    getData();\n  }, [query]);\n  return (\n    <SMain>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {loaderActive && <Loader />}\n      {queryList.length > 0 && (\n        <>\n          <h2>Movie list</h2>\n          <MovieList moviesArray={queryList} location={location} />\n        </>\n      )}\n    </SMain>\n  );\n};\n\nexport default Movies;\n\nconst SMain = styled.main`\n  margin: auto;\n  padding-top: 80px;\n  padding-bottom: 10px;\n  background-color: #cecaca;\n  width: 1200px;\n\n  min-height: 100vh;\n  text-align: center;\n`;\n"],"names":["Searchbar","onSubmit","useState","query","setQuery","SForm","event","preventDefault","SButton","type","size","SInput","onChange","currentTarget","value","toLowerCase","className","autoComplete","autoFocus","placeholder","styled","queryList","setQueryList","loaderActive","setLoaderActive","location","useLocation","useSearchParams","searchParams","setSearchParams","console","log","get","useEffect","getData","fetchByQuery","searchResult","length","toast","SMain","trim","search","Loader","MovieList","moviesArray"],"sourceRoot":""}